Bootstrap: library
From: ubuntu:20.04
Stage: main  


#%files
#/home/user/ParaView-5.7.0-MPI-Linux-Python3.7-64bit /opt


%environment
    export OMPI_DIR=/opt/ompi
    export SINGULARITY_OMPI_DIR=$OMPI_DIR
    export SINGULARITYENV_APPEND_PATH=$OMPI_DIR/bin
    export SINGULAIRTYENV_APPEND_LD_LIBRARY_PATH=$OMPI_DIR/lib
    export PATH=/opt/ompi/bin:$PATH

    export PATH=/opt/HDF5-1.12.2/bin:$PATH
    export LD_LIBRARY_PATH=/opt/HDF5-1.12.2/include:$LD_LIBRARY_PATH
    export LD_LIBRARY_PATH=/opt/HDF5-1.12.2/lib:$LD_LIBRARY_PATH

    export PATH=/opt/ParaView-5.7.0-MPI-Linux-Python3.7-64bit/bin:$PATH

    export PATH=/usr/local/lib:$PATH
    export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
    export PATH=/usr/local/include:$PATH
    
    
    export DEBIAN_FRONTEND=noninteractive
%post
    
     export DEBIAN_FRONTEND=noninteractive
    echo "Installing required packages..."
    apt-get update
    apt-get install -y build-essential dbus-x11 libgl1-mesa-dev wget git bash gcc gfortran g++ make file
    apt-get install -y x11-apps xauth gnome-terminal locales nano
    apt-get install -y libglu1-mesa
    echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
    locale-gen en_US.utf8
    /usr/sbin/update-locale LANG=en_US.UTF-8
    export LC_ALL=en_US.UTF-8
    export LANG=en_US.UTF-8
    

  ## Installation of ParaView
    #******************************************************
    cd /tmp && wget -O ParaView-5.7.0-MPI-Linux-Python3.7-64bit.tar.gz 'https://www.paraview.org/paraview-downloads/download.php?submit=Download&version=v5.7&type=binary&os=Linux&downloadFile=ParaView-5.7.0-MPI-Linux-Python3.7-64bit.tar.gz'
    cd /opt && tar xzf /tmp/ParaView-5.7.0-MPI-Linux-Python3.7-64bit.tar.gz && cd ..

    
  ## Installation of pip and Python libraries
    #******************************************************
    

    apt-get -y install tzdata gnome-terminal
    apt-get install -y python3-dev
    apt-get install -y python3-pip
    apt-get install -y python3-pyqt5.qtopengl python3-pyqt5.qtquick 
    pip3 install pyqt5 scikit-image vtk tinydb sympy==1.8 pycalphad==0.9.2 pymks yt
    python3 -m pip install pyqt5==5.15.4

    
    echo "Installing Open MPI"
    #*********************************
    export OMPI_DIR=/opt/ompi
    export OMPI_VERSION=4.0.4
    export OMPI_URL="https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-$OMPI_VERSION.tar.gz"
    mkdir -p /tmp/ompi
    mkdir -p /opt
    # Download
    cd /tmp/ompi && wget -O openmpi-$OMPI_VERSION.tar.gz $OMPI_URL && tar xzf openmpi-$OMPI_VERSION.tar.gz
    # Compile and install
    cd /tmp/ompi/openmpi-$OMPI_VERSION && ./configure --prefix=$OMPI_DIR && make install
    # Set env variables so we can compile our application
    export PATH=$OMPI_DIR/bin:$PATH
    export LD_LIBRARY_PATH=$OMPI_DIR/lib:$LD_LIBRARY_PATH
    export MANPATH=$OMPI_DIR/share/man:$MANPATH

    echo "Compiling the MPI application..."
    export CC=mpicc



    ## Installation of HdF5 library
    #****************************************
    export HDF5_URL="https://github.com/HDFGroup/hdf5/archive/refs/tags/hdf5-1_12_2.tar.gz"
    mkdir -p /tmp/HDF5
    cd /tmp/HDF5 && wget -O hdf5-dwnld.tar.gz $HDF5_URL && tar xzf hdf5-dwnld.tar.gz
    cd hdf5-hdf5-1_12_2
    mkdir -p /opt


    cd /tmp/HDF5/hdf5-hdf5-1_12_2 && CC=$CC ./configure --prefix=/opt/HDF5-1.12.2 --enable-parallel
     make -j 4
    make install -j 4

    export PATH=/opt/HDF5/bin:$PATH
    export LD_LIBRARY_PATH=/opt/HDF5-1.12.2/include:$LD_LIBRARY_PATH
    cd /opt && cd .. && chmod 777 /opt

  

    # Installing gsl and fftw3
    #****************************

    wget https://mirror.ibcp.fr/pub/gnu/gsl/gsl-latest.tar.gz
    tar -xzf gsl-latest.tar.gz
    cd *gsl*
    ./configure
    #--prefix=/opt/GSL
    make -j 4
    #make check -j 4
    make install -j 4

    wget http://www.fftw.org/fftw-3.3.8.tar.gz
    tar -xzf fftw-3.3.8.tar.gz
    cd fftw-3.3.8
    ./configure
    #--prefix=/opt/FFTW3
    make -j 4
    #make check -j 4
    make install -j 4


